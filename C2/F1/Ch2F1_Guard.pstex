%!PS-Adobe-2.0 EPSF-2.0
%%Title: Ch2F1_Guard.pstex
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Fri Jan 24 12:49:21 2003
%%For: nguyen@at129 (Van Duc Nguyen)
%%BoundingBox: 0 0 392 567
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 567 moveto 0 0 lineto 392 0 lineto 392 567 lineto closepath clip newpath
-61.6 586.1 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06299 0.06299 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 3512 1278 m
 2136 742 l gs col0 s gr 
% Polyline
2 slj
n 5501 6032 m 5502 6033 l 5504 6036 l 5508 6040 l 5513 6048 l 5521 6057 l
 5531 6069 l 5543 6084 l 5557 6100 l 5572 6118 l 5589 6137 l
 5607 6157 l 5626 6177 l 5647 6199 l 5668 6221 l 5692 6244 l
 5717 6267 l 5745 6292 l 5776 6317 l 5809 6344 l 5844 6372 l
 5882 6399 l 5920 6425 l 5958 6450 l 5993 6472 l 6027 6492 l
 6059 6509 l 6089 6525 l 6117 6539 l 6145 6552 l 6171 6563 l
 6196 6574 l 6220 6584 l 6242 6592 l 6263 6600 l 6282 6607 l
 6299 6613 l 6313 6618 l 6324 6622 l 6332 6625 l 6338 6627 l
 6341 6628 l
 6342 6628 l gs col0 s gr 
% Polyline
n 6342 7699 m 6343 7701 l 6344 7705 l 6346 7711 l 6349 7722 l 6354 7735 l
 6360 7752 l 6367 7771 l 6375 7793 l 6385 7816 l 6395 7840 l
 6407 7864 l 6420 7890 l 6434 7915 l 6451 7942 l 6469 7968 l
 6490 7996 l 6514 8024 l 6541 8052 l 6571 8080 l 6602 8105 l
 6633 8128 l 6663 8147 l 6692 8163 l 6720 8176 l 6746 8187 l
 6772 8197 l 6797 8204 l 6821 8211 l 6844 8216 l 6866 8221 l
 6886 8224 l 6904 8227 l 6920 8229 l 6933 8231 l 6942 8232 l
 6949 8232 l 6952 8233 l
 6954 8233 l gs col0 s gr 
% Polyline
n 6342 7699 m 6343 7701 l 6344 7705 l 6346 7711 l 6349 7722 l 6354 7735 l
 6360 7752 l 6367 7771 l 6375 7793 l 6385 7816 l 6395 7840 l
 6407 7864 l 6420 7890 l 6434 7915 l 6451 7942 l 6469 7968 l
 6490 7996 l 6514 8024 l 6541 8052 l 6571 8080 l 6602 8105 l
 6633 8128 l 6663 8147 l 6692 8163 l 6720 8176 l 6746 8187 l
 6772 8197 l 6797 8204 l 6821 8211 l 6844 8216 l 6866 8221 l
 6886 8224 l 6904 8227 l 6920 8229 l 6933 8231 l 6942 8232 l
 6949 8232 l 6952 8233 l
 6954 8233 l gs col0 s gr 
% Polyline
0 slj
n 1299 5176 m 1299 4651 l 5506 4651 l
 5506 5176 l gs col0 s gr 
% Polyline
n 1603 5203 m 1611 5203 l gs col0 s gr
% Polyline
gs  clippath
2163 4361 m 2112 4361 l 2112 4465 l 2138 4389 l 2163 4465 l cp
eoclip
n 2138 4376 m
 2138 5203 l gs col0 s gr gr

% arrowhead
n 2163 4465 m 2138 4389 l 2112 4465 l  col0 s
% Polyline
n 2138 6031 m
 5506 6031 l gs col0 s gr 
% Polyline
n 2701 7685 m
 6350 7685 l gs col0 s gr 
% Polyline
gs  clippath
2158 5737 m 2117 5737 l 2117 5847 l 2138 5768 l 2158 5847 l cp
eoclip
n 2138 5752 m
 2138 6619 l gs col0 s gr gr

% arrowhead
n 2158 5847 m 2138 5768 l 2117 5847 l  col0 s
% Polyline
gs  clippath
2157 7419 m 2118 7419 l 2118 7530 l 2138 7451 l 2157 7530 l cp
eoclip
n 2138 7434 m
 2138 8237 l gs col0 s gr gr

% arrowhead
n 2157 7530 m 2138 7451 l 2118 7530 l  col0 s
% Polyline
gs  clippath
7198 8271 m 7198 8228 l 7076 8228 l 7166 8250 l 7076 8271 l cp
eoclip
n 1066 8250 m
 7183 8250 l gs col0 s gr gr

% arrowhead
n 7076 8271 m 7166 8250 l 7076 8228 l  col0 s
% Polyline
 [15 45] 45 sd
n 1295 5184 m
 1295 8250 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
5690 3844 m 5690 3805 l 5578 3805 l 5658 3825 l 5578 3844 l cp
eoclip
n 1019 3825 m
 5675 3825 l gs col0 s gr gr

% arrowhead
n 5578 3844 m 5658 3825 l 5578 3805 l  col0 s
% Polyline
gs  clippath
2161 3029 m 2110 3029 l 2110 3133 l 2136 3057 l 2161 3133 l cp
eoclip
n 2136 3044 m
 2136 3818 l gs col0 s gr gr

% arrowhead
n 2161 3133 m 2136 3057 l 2110 3133 l  col0 s
% Polyline
n 3512 3818 m 2977 3597 l
 2977 3818 l gs col0 s gr 
% Polyline
 [15 45] 45 sd
n 2977 3597 m
 2136 3270 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
5690 2532 m 5690 2493 l 5578 2493 l 5658 2513 l 5578 2532 l cp
eoclip
n 1019 2513 m
 5675 2513 l gs col0 s gr gr

% arrowhead
n 5578 2532 m 5658 2513 l 5578 2493 l  col0 s
% Polyline
n 2136 1955 m 2977 2284 l
 2977 2505 l gs col0 s gr 
% Polyline
 [15 45] 45 sd
n 2977 2284 m
 3512 2505 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
2161 1772 m 2110 1772 l 2110 1876 l 2136 1800 l 2161 1876 l cp
eoclip
n 2136 1787 m
 2136 2505 l gs col0 s gr gr

% arrowhead
n 2161 1876 m 2136 1800 l 2110 1876 l  col0 s
% Polyline
gs  clippath
2161 532 m 2110 532 l 2110 636 l 2136 560 l 2161 636 l cp
eoclip
n 2136 547 m
 2136 1278 l gs col0 s gr gr

% arrowhead
n 2161 636 m 2136 560 l 2110 636 l  col0 s
% Polyline
gs  clippath
5661 1298 m 5661 1257 l 5550 1257 l 5630 1278 l 5550 1298 l cp
eoclip
n 990 1278 m
 5646 1278 l gs col0 s gr gr

% arrowhead
n 5550 1298 m 5630 1278 l 5550 1257 l  col0 s
% Polyline
gs  clippath
7121 5205 m 7121 5162 l 6999 5162 l 7089 5184 l 6999 5205 l cp
eoclip
n 990 5184 m
 7106 5184 l gs col0 s gr gr

% arrowhead
n 6999 5205 m 7089 5184 l 6999 5162 l  col0 s
% Polyline
gs  clippath
7121 6650 m 7121 6605 l 7001 6605 l 7089 6628 l 7001 6650 l cp
eoclip
n 990 6628 m
 7106 6628 l gs col0 s gr gr

% arrowhead
n 7001 6650 m 7089 6628 l 7001 6605 l  col0 s
% Polyline
 [15 45] 45 sd
n 5501 5184 m
 5501 8250 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
5516 8945 m 5516 8894 l 5382 8894 l 5484 8920 l 5382 8945 l cp
2121 8894 m 2121 8945 l 2254 8945 l 2153 8920 l 2254 8894 l cp
eoclip
n 2136 8920 m
 5501 8920 l gs col0 s gr gr

% arrowhead
n 2254 8894 m 2153 8920 l 2254 8945 l  col0 s
% arrowhead
n 5382 8945 m 5484 8920 l 5382 8894 l  col0 s
% Polyline
 [15 45] 45 sd
n 6342 6628 m
 6342 8233 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
2160 8634 m 2160 8595 l 2048 8595 l 2128 8615 l 2048 8634 l cp
1314 8595 m 1314 8634 l 1425 8634 l 1346 8615 l 1425 8595 l cp
eoclip
n 1329 8615 m
 2145 8615 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 88.60 574.33] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 1425 8595 m 1346 8615 l 1425 8634 l  col0 s
% arrowhead
n 2048 8634 m 2128 8615 l 2048 8595 l  col0 s
% Polyline
gs  clippath
6331 8634 m 6331 8595 l 6219 8595 l 6299 8615 l 6219 8634 l cp
5486 8595 m 5486 8634 l 5597 8634 l 5518 8615 l 5597 8595 l cp
eoclip
n 5501 8615 m
 6316 8615 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 366.73 574.33] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 5597 8595 m 5518 8615 l 5597 8634 l  col0 s
% arrowhead
n 6219 8634 m 6299 8615 l 6219 8595 l  col0 s
% Polyline
 [15 45] 45 sd
n 2672 7702 m
 2672 8250 l gs col0 s gr  [] 0 sd
% Polyline
0.000 slw
 [15 22] 22 sd
n 2672 7699 m 5501 7699 l 5501 8233 l 2672 8233 l
 2672 7699 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P4 [16 0 0 -16 178.13 513.27] PATmp PATsp ef gr PATusp  [] 0 sd
% Polyline
 [15 45] 45 sd
n 6342 7699 m 6342 8233 l 6954 8233 l 6723 8233 l 6571 8080 l 6418 7928 l

 6342 7775 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 422.80 513.27] PATmp PATsp ef gr PATusp  [] 0 sd
% Polyline
7.500 slw
 [15 45] 45 sd
n 2977 1047 m
 2977 3799 l gs col0 s gr  [] 0 sd
% Polyline
2 slj
n 2138 8237 m 2138 8235 l 2138 8231 l 2138 8225 l 2139 8214 l 2139 8201 l
 2140 8184 l 2142 8164 l 2144 8143 l 2147 8120 l 2151 8096 l
 2157 8071 l 2163 8045 l 2172 8019 l 2182 7993 l 2195 7965 l
 2211 7937 l 2230 7908 l 2253 7879 l 2280 7851 l 2309 7825 l
 2340 7801 l 2370 7781 l 2400 7764 l 2430 7750 l 2459 7738 l
 2487 7728 l 2515 7719 l 2543 7712 l 2570 7706 l 2595 7701 l
 2619 7696 l 2641 7693 l 2660 7690 l 2675 7688 l 2687 7687 l
 2695 7686 l 2699 7685 l
 2701 7685 l gs col0 s gr 
% Polyline
n 1295 6628 m 1296 6627 l 1297 6624 l 1299 6619 l 1302 6611 l 1307 6601 l
 1313 6588 l 1320 6573 l 1329 6556 l 1339 6537 l 1350 6517 l
 1363 6496 l 1377 6474 l 1392 6451 l 1409 6428 l 1428 6405 l
 1449 6380 l 1473 6355 l 1500 6328 l 1531 6301 l 1565 6274 l
 1602 6246 l 1641 6220 l 1680 6196 l 1718 6174 l 1755 6155 l
 1791 6138 l 1825 6123 l 1858 6110 l 1890 6098 l 1921 6088 l
 1952 6078 l 1981 6070 l 2009 6062 l 2036 6055 l 2060 6049 l
 2081 6044 l 2099 6040 l 2113 6037 l 2123 6035 l 2130 6033 l
 2134 6032 l
 2136 6032 l gs col0 s gr 
/Times-Roman-iso ff 180.00 scf sf
1755 8846 m
gs 1 -1 sc (Guard interval) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5882 8846 m
gs 1 -1 sc (Guard interval) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
990 513 m
gs 1 -1 sc (a\)) col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
990 1889 m
gs 1 -1 sc (b\)) col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
990 3265 m
gs 1 -1 sc (c\)) col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
990 4488 m
gs 1 -1 sc (d\)) col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
990 5863 m
gs 1 -1 sc (e\)) col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
990 7239 m
gs 1 -1 sc (f\)) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
3742 9304 m
gs 1 -1 sc (FFT window) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
2442 8080 m
gs 1 -1 sc (I) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
5958 8080 m
gs 1 -1 sc (III) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
6801 8080 m
gs 1 -1 sc (IV) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 210.00 scf sf
4124 7622 m
gs 1 -1 sc (II) dup sw pop 2 div neg 0 rm  col0 sh gr
$F2psEnd
rs
end
